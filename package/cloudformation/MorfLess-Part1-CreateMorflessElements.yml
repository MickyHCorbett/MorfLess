AWSTemplateFormatVersion: "2010-09-09"
Description: |+
  Morfless Set-up Part 1:
    Fill in the parameter fields to reflect a unique bucket structure and function naming convention

Parameters:
  morflessS3WebsiteBucket:
    Type: String
    Default: docksat.space-dev
    Description: The target bucket i.e. website. Dots can be used.
  morflessListBucket:
    Type: String
    Default: docksat.space-list
    Description: The backend list bucket
  morflessSourceBucket:
    Type: String
    Default: docksat.space-source
    Description: The backend source files bucket
  morflessSearchBucket:
    Type: String
    Default: docksat.space-search
    Description: The backend search files bucket

  morflessPackageBucket:
    Type: String
    Default: morfless-package-eu-west-1
    Description: Bucket where source package files are held

  morflessLayerName:
    Type: String
    Default: morflessLibs-docksat-space
    Description: Unique layer for a MorfLess instance. Use dashes

  morflessSearchApiName:
    Type: String
    Default: morflessTestSearchApi
    Description: Morfless Search Api name
  morfessApiStageName:
    Type: String
    Default: prod
  morflessStateMachineName:
    Type: String
    Default: morflessStateDocksatSpace
    Description: State Machine Name

  morflessAppPreFix:
    Type: String
    Default: docksat-space-dev2
    Description: The prefix for the functions associated with this instance of MorfLess. Use dashes.

Resources:
  WebsiteBucket:
    Properties:
      BucketName: !Ref morflessS3WebsiteBucket
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
    Type: "AWS::S3::Bucket"

  SourceBucket:
    Properties:
      BucketName: !Ref morflessSourceBucket
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    Type: "AWS::S3::Bucket"

  SearchBucket:
    Properties:
      BucketName: !Ref morflessSearchBucket
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    Type: "AWS::S3::Bucket"

  ListBucket:
    Properties:
      BucketName: !Ref morflessListBucket
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    Type: "AWS::S3::Bucket"

  WebsiteBucketPolicy:
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal: "*"
            Action: s3:GetObject
            Resource: !Sub "arn:aws:s3:::${morflessS3WebsiteBucket}/*"
    Type: "AWS::S3::BucketPolicy"

  MorflessLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleRuntimes:
        - python3.7
      Content:
        S3Bucket: !Ref morflessPackageBucket
        S3Key: layers/python.zip
      Description: MorfLess python library for use with MorfLess lambda functions
      LayerName: !Ref morflessLayerName
      LicenseInfo: MIT

  MorflessRenderHtmlFunction:
    Type: AWS::Lambda::Function
    DependsOn: MorflessLayer
    Properties:
      Code:
        S3Bucket: !Ref morflessPackageBucket
        S3Key: lambda/morfless-renderHtml.zip
      Description: MorfLess Render Html lambda
      Environment:
        Variables:
          SOURCE_BUCKET: !Ref morflessSourceBucket
          LIST_BUCKET: !Ref morflessListBucket
          SEARCH_BUCKET: !Ref morflessSearchBucket
          TARGET_BUCKET: !Ref morflessS3WebsiteBucket
      FunctionName: !Sub "${morflessAppPreFix}-morfless-renderHtml"
      Handler: renderHtml.handler
      Role: !GetAtt MorflessRenderHtmlRole.Arn
      Layers:
        - !Ref MorflessLayer
      MemorySize: 256
      Runtime: python3.7
      Timeout: 300

  MorflessCreateListPagesFunction:
    Type: AWS::Lambda::Function
    DependsOn: MorflessLayer
    Properties:
      Code:
        S3Bucket: !Ref morflessPackageBucket
        S3Key: lambda/morfless-createListPages.zip
      Description: MorfLess Create List Pages lambda
      Environment:
        Variables:
          SOURCE_BUCKET: !Ref morflessSourceBucket
          LIST_BUCKET: !Ref morflessListBucket
          TARGET_BUCKET: !Ref morflessS3WebsiteBucket
      FunctionName: !Sub "${morflessAppPreFix}-morfless-createListPages"
      Handler: createListPages.handler
      Role: !GetAtt MorflessCreateListPagesRole.Arn
      Layers:
        - !Ref MorflessLayer
      MemorySize: 256
      Runtime: python3.7
      Timeout: 300

  MorflessSearchContentFunction:
    Type: AWS::Lambda::Function
    DependsOn: MorflessLayer
    Properties:
      Code:
        S3Bucket: !Ref morflessPackageBucket
        S3Key: lambda/morfless-searchContent.zip
      Description: MorfLess Search Content lambda
      Environment:
        Variables:
          SOURCE_BUCKET: !Ref morflessSourceBucket
          LIST_BUCKET: !Ref morflessListBucket
          SEARCH_BUCKET: !Ref morflessSearchBucket
      FunctionName: !Sub "${morflessAppPreFix}-morfless-searchContent"
      Handler: searchContent.handler
      Role: !GetAtt MorflessSearchContentRole.Arn
      Layers:
        - !Ref MorflessLayer
      MemorySize: 256
      Runtime: python3.7
      Timeout: 300

  MorflessStepFunction:
    Type: AWS::StepFunctions::StateMachine
    DependsOn: MorflessLayer
    Properties:
      RoleArn: !GetAtt MorflessStateMachineRole.Arn
      StateMachineName: !Ref morflessStateMachineName
      DefinitionString: !Sub |-
            {
              "Comment": "Run MorfLess",
              "StartAt": "Render HTML and create list info",
              "States": {
                "Render HTML and create list info": {
                  "Type": "Task",
                  "Resource": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${morflessAppPreFix}-morfless-renderHtml:$LATEST",
                  "Next": "Create lists and list pages"
                },
                "Create lists and list pages": {
                  "Type": "Task",
                  "Resource": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${morflessAppPreFix}-morfless-createListPages:$LATEST",
                  "End": true
                }
              }
            }

  MorflessTriggerStatesFunction:
    Type: AWS::Lambda::Function
    DependsOn: MorflessStepFunction
    Properties:
      Code:
        S3Bucket: !Ref morflessPackageBucket
        S3Key: lambda/morfless-triggerStates.zip
      Description: MorfLess Trigger State Machine lambda
      Environment:
        Variables:
          STEP_FUNCTION_NAME: !Sub "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${morflessStateMachineName}"
      FunctionName: !Sub "${morflessAppPreFix}-morfless-triggerStates"
      Handler: triggerStates.handler
      Role: !GetAtt MorflessTriggerStatesRole.Arn
      MemorySize: 256
      Runtime: python3.7
      Timeout: 120

  MorflessRenderHtmlRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Description: Role for Morfless Render Html lambda
      Policies:
        - PolicyName: RenderHtmlAccessBucketsLogs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Sid: '1'
                Effect: Allow
                Action: "s3:GetObject"
                Resource:
                  - !Sub "arn:aws:s3:::${morflessSourceBucket}"
                  - !Sub "arn:aws:s3:::${morflessSourceBucket}/*"
              -
                Sid: '2'
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:PutObject"
                  - "s3:DeleteObject"
                Resource:
                  - !Sub "arn:aws:s3:::${morflessListBucket}"
                  - !Sub "arn:aws:s3:::${morflessListBucket}/*"
                  - !Sub "arn:aws:s3:::${morflessSearchBucket}"
                  - !Sub "arn:aws:s3:::${morflessSearchBucket}/*"
                  - !Sub "arn:aws:s3:::${morflessS3WebsiteBucket}"
                  - !Sub "arn:aws:s3:::${morflessS3WebsiteBucket}/*"
              -
                Sid: '3'
                Effect: Allow
                Action: "logs:CreateLogGroup"
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
              -
                Sid: '4'
                Effect: Allow
                Action:
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${morflessAppPreFix}-morfless-renderHtml:*"

  MorflessCreateListPagesRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Description: Role for Morfless Create List Pages lambda
      Policies:
        - PolicyName: CreateListPagesAccessBucketsLogs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Sid: '1'
                Effect: Allow
                Action: "s3:GetObject"
                Resource:
                  - !Sub "arn:aws:s3:::${morflessListBucket}"
                  - !Sub "arn:aws:s3:::${morflessListBucket}/*"
                  - !Sub "arn:aws:s3:::${morflessSourceBucket}"
                  - !Sub "arn:aws:s3:::${morflessSourceBucket}/*"
              -
                Sid: '2'
                Effect: Allow
                Action: "s3:PutObject"
                Resource:
                  - !Sub "arn:aws:s3:::${morflessS3WebsiteBucket}"
                  - !Sub "arn:aws:s3:::${morflessS3WebsiteBucket}/*"
              -
                Sid: '3'
                Effect: Allow
                Action: "logs:CreateLogGroup"
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
              -
                Sid: '4'
                Effect: Allow
                Action:
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${morflessAppPreFix}-morfless-createListPages:*"

  MorflessSearchContentRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Description: Role for Morfless Search Content lambda
      Policies:
        - PolicyName: SearchContentAccessBucketsLogs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Sid: '1'
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:ListBucket"
                Resource:
                  - !Sub "arn:aws:s3:::${morflessSourceBucket}"
                  - !Sub "arn:aws:s3:::${morflessSourceBucket}/*"
                  - !Sub "arn:aws:s3:::${morflessListBucket}"
                  - !Sub "arn:aws:s3:::${morflessListBucket}/*"
                  - !Sub "arn:aws:s3:::${morflessSearchBucket}"
                  - !Sub "arn:aws:s3:::${morflessSearchBucket}/*"
              -
                Sid: '2'
                Effect: Allow
                Action: "logs:CreateLogGroup"
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
              -
                Sid: '3'
                Effect: Allow
                Action:
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${morflessAppPreFix}-morfless-searchContent:*"

  MorflessStateMachineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - !Join ["", ["states.", Ref: "AWS::Region", ".amazonaws.com"]]
            Action:
              - 'sts:AssumeRole'
      Path: /
      Description: Role for Morfless Step Function
      Policies:
        - PolicyName: MorflessRunLambdaAndCreateLogs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Sid: '1'
                Effect: Allow
                Action: "lambda:InvokeFunction"
                Resource: "*"
              -
                Sid: '2'
                Effect: Allow
                Action: "logs:CreateLogGroup"
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
              -
                Sid: '3'
                Effect: Allow
                Action:
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/StateMachine/${morflessStateMachineName}:*"

  MorflessTriggerStatesRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Description: Role for Morfless Trigger States lambda
      Policies:
        - PolicyName: TriggerStateMachineWriteLogs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Sid: '1'
                Effect: "Allow"
                Action:
                  - "states:StartExecution"
                Resource: !Sub "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${morflessStateMachineName}"
              -
                Sid: '2'
                Effect: Allow
                Action: "logs:CreateLogGroup"
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
              -
                Sid: '3'
                Effect: Allow
                Action:
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${morflessAppPreFix}-morfless-triggerStates:*"


  MorflessSearchRESTApi:
    Type: AWS::ApiGateway::RestApi
    DependsOn: MorflessSearchContentFunction
    Properties:
      EndpointConfiguration:
        Types:
          - EDGE
      Name: !Ref morflessSearchApiName

  SearchProxyResource:
    Type: 'AWS::ApiGateway::Resource'
    DependsOn: MorflessSearchRESTApi
    Properties:
      RestApiId: !Ref MorflessSearchRESTApi
      ParentId: !GetAtt
        - MorflessSearchRESTApi
        - RootResourceId
      PathPart: '{search}'

  ProxyResourceGET:
    Type: 'AWS::ApiGateway::Method'
    DependsOn: MorflessSearchRESTApi
    Properties:
      RestApiId: !Ref MorflessSearchRESTApi
      ResourceId: !Ref SearchProxyResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub >-
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MorflessSearchContentFunction.Arn}/invocations
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            ResponseTemplates:
              application/json: ''
            StatusCode: '200'
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: '{"statusCode": 200}'
      MethodResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: true
            StatusCode: '200'

  ProxyResourceOPTIONS:
    Type: "AWS::ApiGateway::Method"
    DependsOn: MorflessSearchRESTApi
    Properties:
      RestApiId: !Ref MorflessSearchRESTApi
      ResourceId: !Ref SearchProxyResource
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        Type: MOCK
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            ResponseTemplates:
              application/json: ''
            StatusCode: '200'
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json: '{"statusCode": 200}'
      MethodResponses:
        - ResponseModels:
            application/json: Empty
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: '200'

  MorflessLambdaApiGatewayInvoke:
    Type: "AWS::Lambda::Permission"
    DependsOn: MorflessSearchRESTApi
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref MorflessSearchContentFunction
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${MorflessSearchRESTApi}/*/GET/*"

  MorflessApiGatewayDeployment:
    Type: "AWS::ApiGateway::Deployment"
    DependsOn: ProxyResourceGET
    Properties:
      RestApiId: !Ref MorflessSearchRESTApi
      StageName: !Ref morfessApiStageName

Outputs:
  MorflessApiInvokeUrl:
    Description: The API invoke url to use in Settings
    Value: !Sub "https://${MorflessSearchRESTApi}.execute-api.${AWS::Region}.amazonaws.com/${morfessApiStageName}"
  StepFunctionArn:
    Description: Step Function arn
    Value: !Ref MorflessStepFunction
